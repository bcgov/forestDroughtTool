dplyr::select(year,month,day,ppt_filled,tmx_filled,tmn_filled)
daily_NA_fill<-
climateData %>%
group_by(year) %>%
summarise(pptNA=imputeTS::statsNA(ppt,printOnly=FALSE)$naGapLongest,
tmxNA=imputeTS::statsNA(tmx,printOnly=FALSE)$naGapLongest,
tmnNA=imputeTS::statsNA(tmn,printOnly=FALSE)$naGapLongest) %>%
mutate(pptNA, pptNA = ifelse(is.na(pptNA), 0, pptNA)) %>%
mutate(tmxNA, tmxNA = ifelse(is.na(tmxNA), 0, tmxNA)) %>%
mutate(tmnNA, tmnNA = ifelse(is.na(tmnNA), 0, tmnNA)) %>%
filter(pptNA<10&tmxNA<10&tmnNA<10) %>%
select(year) %>%
# Impute NA values using adjacent values
left_join(climateData,by="year") %>%
mutate(ppt2=imputeTS::na_locf(ppt),ppt3=imputeTS::na_locf(ppt,option="nocb")) %>%
mutate(tmx2=imputeTS::na_locf(tmx),tmx3=imputeTS::na_locf(tmx,option="nocb")) %>%
mutate(tmn2=imputeTS::na_locf(tmn),tmn3=imputeTS::na_locf(tmn,option="nocb")) %>%
rowwise() %>%
mutate(ppt_filled=mean(ppt2,ppt3)) %>%
mutate(tmx_filled=mean(tmx2,tmx3)) %>%
mutate(tmn_filled=mean(tmn2,tmn3)) %>%
dplyr::select(year,month,day,ppt_filled,tmx_filled,tmn_filled)
View(daily_NA_fill)
cleanECData<-function(climateData) {
# Omit years with 10 or more consecutive missing values in any climate variable
daily_NA_fill<-
climateData %>%
group_by(year) %>%
summarise(pptNA=imputeTS::statsNA(ppt,printOnly=FALSE)$naGapLongest,
tmxNA=imputeTS::statsNA(tmx,printOnly=FALSE)$naGapLongest,
tmnNA=imputeTS::statsNA(tmn,printOnly=FALSE)$naGapLongest) %>%
mutate(pptNA, pptNA = ifelse(is.na(pptNA), 0, pptNA)) %>%
mutate(tmxNA, tmxNA = ifelse(is.na(tmxNA), 0, tmxNA)) %>%
mutate(tmnNA, tmnNA = ifelse(is.na(tmnNA), 0, tmnNA)) %>%
filter(pptNA<10&tmxNA<10&tmnNA<10) %>%
select(year) %>%
# Impute NA values using adjacent values
left_join(climateData,by="year") %>%
mutate(ppt2=imputeTS::na_locf(ppt),ppt3=imputeTS::na_locf(ppt,option="nocb")) %>%
mutate(tmx2=imputeTS::na_locf(tmx),tmx3=imputeTS::na_locf(tmx,option="nocb")) %>%
mutate(tmn2=imputeTS::na_locf(tmn),tmn3=imputeTS::na_locf(tmn,option="nocb")) %>%
rowwise() %>%
mutate(ppt_filled=mean(ppt2,ppt3)) %>%
mutate(tmx_filled=mean(tmx2,tmx3)) %>%
mutate(tmn_filled=mean(tmn2,tmn3)) %>%
dplyr::select(year,month,day,ppt_filled,tmx_filled,tmn_filled)
return(daily_NA_fill)
}
x<-cleanECData(climateData)
View(climateData)
is.na(climateData$ppt)
range(climateData$ppt)
which(is.na(climateData$ppt)==TRUE)
document()
library(devtools)
library(roxygen2)
document()
getwd()
setwd("..")
install("forestDroughtTool")
check("forestDroughtTool")
daily_NA_fill<-
climateData %>%
group_by(year) %>%
summarise(pptNA=imputeTS::statsNA(ppt,printOnly=FALSE)$naGapLongest,
tmxNA=imputeTS::statsNA(tmx,printOnly=FALSE)$naGapLongest,
tmnNA=imputeTS::statsNA(tmn,printOnly=FALSE)$naGapLongest)
daily_NA_fill
View(daily_NA_fill)
setwd("C:/Users/hgriesba/Documents/Git/bcgov/forestDroughtTool")
group_by
document()
check("forestDroughtTool")
setwd("..")
check("forestDroughtTool")
check("forestDroughtTool")
library(weathercan)
rm(list=ls())
install.packages("remotes")
remotes::install_github("bcgov/forestDroughtTool")
install.packages("remotes")
remotes::install_github("bcgov/forestDroughtTool")
library(readr)
bgcUnits_Compiled <- read_csv("C:/temp/bgcUnits_Compiled.csv")
View(bgcUnits_Compiled)
help(read_csv)
library(readr)
bgcUnits_Compiled <- read_csv("C:/temp/bgcUnits_Compiled.csv",col_names = FALSE)
View(bgcUnits_Compiled)
x<-bgcUnits_Compiled
x$BGC=paste(x$X1,x$X2,x$X3,sep="")
View(x)
bgc<-unique(x$BGC)
library(readr)
BEC2Stations <- read_csv("C:/temp/BEC2Stations.csv")
View(BEC2Stations)
bgcSTN <- read_csv("C:/temp/BEC2Stations.csv")
bgcSTN$MAP_LABEL%in%bgc
bgc%in%bgcSTN$MAP_LABEL
bgcSTN[bgc%in%bgcSTN$MAP_LABEL,]
bgcSTN[bgcSTN$MAP_LABEL%in%bgc,]
stn2<-bgcSTN[bgcSTN$MAP_LABEL%in%bgc,]
unique(stn2$MAP_LABEL)
write.csv(stn2,file="stationList.csv")
getwd()
bgcUnits_Compiled
View(stn2)
stn2<-bgcSTN[bgcSTN$MAP_LABEL%in%bgc,] %>%
filter(Agency=="ECCC" | Agency=="BC HYDRO")
library(dplyr)
stn2<-bgcSTN[bgcSTN$MAP_LABEL%in%bgc,] %>%
filter(Agency=="ECCC" | Agency=="BC HYDRO")
write.csv(stn2,file="stationList.csv")
bgc2=unique(stn2$MAP_LABEL)
bgc2=bgc%in%unique(stn2$MAP_LABEL)
bgc2
bgc2=bgc[bgc%in%unique(stn2$MAP_LABEL)]
bgc2
bgc3=bgc[-bgc%in%unique(stn2$MAP_LABEL)]
bgc3=bgc[bgc%!in%unique(stn2$MAP_LABEL)]
bgc3=bgc[!bgc%in%unique(stn2$MAP_LABEL)]
bgc3
knitr::opts_chunk$set(echo = TRUE)
library(bcmaps)
library(weathercan)
library(dplyr)
library(magrittr)
library(ggplot2)
library(cowplot)
library(forestDroughtTool)
# Load libraries
library(bcmaps)
library(weathercan)
library(dplyr)
library(magrittr)
library(ggplot2)
library(cowplot)
library(forestDroughtTool)
stn<-
stations %>%
filter(prov=="BC" & interval=="day") %>%
# Step 1.2 - Convert to a spatial file and merge with BGC units (this will take awhile!)
st_as_sf(coords=c("lon","lat")) %>% # convert to spatial file
st_set_crs(4326) %>% # set to WGS1984 datum
transform_bc_albers() %>% # set to BC albers projection
st_join(bec()[,"MAP_LABEL"]) %>%  # merge with BEC
st_drop_geometry() # drop geometry
View(stn)
names(stn)
x<-bgcUnits_Compiled
x$BGC=paste(x$X1,x$X2,x$X3,sep="")
stn2<-bgcSTN[bgcSTN$MAP_LABEL%in%bgc,]
View(stn2)
bgc<-unique(x$BGC)
stn2<-stn[stn$MAP_LABEL%in%bgc,]
View(stn2)
library(magrittr)
stn2 %<>%
mutate(range=end-start+1)
stn2 %<>%
mutate(range=end-start+1) %>% # compute range for data
filter(range<10) # filter stations with less than 10 years
View(stn2)
stn2<-
stn[stn$MAP_LABEL%in%bgc,] %>%
mutate(range=end-start+1) %>% # compute range for data
filter(range<10) # filter stations with less than 10 years
View(stn2)
stn2<-
stn[stn$MAP_LABEL%in%bgc,] %>%
mutate(range=end-start+1) %>% # compute range for data
filter(range>=10) # filter stations with less than 10 years
View(stn2)
library(forestDroughtTool)
wrtie.csv(stn2,file="stationList.csv")
write.csv(stn2,file="stationList.csv")
View(stn2)
stn2<-
stn[stn$MAP_LABEL%in%bgc,] %>%
mutate(range=end-start+1) %>% # compute range for data
filter(range>=10) %>%  # filter stations with less than 10 years
group_by(MAP_LABEL) %>%
write.csv(stn2,file="stationList.csv")
stn2<-
stn[stn$MAP_LABEL%in%bgc,] %>%
mutate(range=end-start+1) %>% # compute range for data
filter(range>=10) %>%  # filter stations with less than 10 years
group_by(MAP_LABEL)
stn2<-
stn[stn$MAP_LABEL%in%bgc,] %>%
mutate(range=end-start+1) %>% # compute range for data
filter(range>=10) %>%  # filter stations with less than 10 years
group_by(MAP_LABEL) %>%
write.csv(file="stationList.csv")
setwd("C:/temp")
stn2<-
stn[stn$MAP_LABEL%in%bgc,] %>%
mutate(range=end-start+1) %>% # compute range for data
filter(range>=10) %>%  # filter stations with less than 10 years
group_by(MAP_LABEL) %>%
write.csv(file="stationList.csv")
stn2<-
stn[stn$MAP_LABEL%in%bgc,] %>%
mutate(range=end-start+1) %>% # compute range for data
filter(range>=10) %>%  # filter stations with less than 10 years
group_by(MAP_LABEL) %>%
arrange(MAP_LABEL) %>%
write.csv(file="stationList.csv")
stn2<-
stn[stn$MAP_LABEL%in%bgc,] %>%
mutate(range=end-start+1) %>% # compute range for data
filter(range>=10) %>%  # filter stations with less than 10 years
group_by(MAP_LABEL) %>%
arrange(MAP_LABEL,range) %>%
write.csv(file="stationList.csv")
stn2<-
stn[stn$MAP_LABEL%in%bgc,] %>%
mutate(range=end-start+1) %>% # compute range for data
filter(range>=10) %>%  # filter stations with less than 10 years
group_by(MAP_LABEL) %>%
arrange(MAP_LABEL,desc(range)) %>%
write.csv(file="stationList.csv")
library(readr)
stationList <- read_csv("stationList.csv")
View(stationList)
stationList <- read_csv("stationList.csv") %>%
filter(Use==1)
View(stationList)
stnIDList=stationList$station_id
climData<-
weather_dl(station_ids=stnIDList,interval="day")
save(climData,file="climData.rda")
View(climData)
climData$station_name=as.factor(climData$station_name)
x1<-by(climData$station_name,FUN=cleanECData())
x1<-by(INDICES=climData$station_name,FUN=cleanECData())
x1<-by(INDICES=climData$station_name,FUN=cleanECData(),data=climData)
x1<-by(INDICES=climData$station_name,FUN=cleanECData(climData))
x1<-by(INDICES=climData$station_name,FUN=cleanECData(x),data=climData)
View(climData)
help("cleanECData")
X<-select(climData,stn=station_name,date,tmn=min_temp,tmx=max_temp,ppt=total_precip,year,month,day)
View(X)
x1<-by(INDICES=X$stn,FUN=cleanECData(),data=X)
x1<-by(INDICES=X$stn,FUN=cleanECData(X),data=X)
help(by)
x1<-by(INDICES=X$stn,cleanECData(X),data=X)
x1<-by(INDICES=X$stn,function(x) cleanECData(x),data=X)
x2<-do.call(rbind.data.frame, x1)
View(x2)
View(x1)
dplyr::bind_rows(x1, .id = "meta_information")
x1[[1]]
x1[1]
x3<-dplyr::bind_rows(x1, .id = "meta_information")
View(x3)
names(x12)
names(x1)
x3$meta_information=as.factor(x3$meta_information,levels=names(x1))
x3$meta_information=factor(x3$meta_information,levels=names(x1))
View(x2)
View(x3)
x3<-dplyr::bind_rows(x1, .id = "meta_information")
levels(x3$meta_information)
x3$meta_information=factor(x3$meta_information)
levels(x3$meta_information)
help(bind_rows)
x3<-dplyr::bind_rows(x1)
x3<-dplyr::bind_rows(x1,.id="station")
names(x1)
x1<-by(INDICES=X$stn,function(x) cleanECData(x),data=X)
x3<-dplyr::bind_rows(x1,.id="station")
View(x3)
names(x1)
names(x1)[x3$station]
x3$station
as.numeric(x3$station)
class(x3$station)
names(x1)[as.numeric(x3$station)]
x3$stn_name=names(x1)[as.numeric(x3$station)]
View(x3)
x2 %>%
group_by(stn_name) %>%
summarise(range=range(year))
names(x2)
x2<-dplyr::bind_rows(x1,.id="id")
x2$stn_name=names(x1)[as.numeric(x2$id)]
x2 %>%
group_by(stn_name) %>%
summarise(range=range(year))
names(x2)
x2 %>%
group_by(stn_name,year) %>%
summarise(n())
x2 %>%
group_by(stn_name,year) %>%
summarise(n()) %>%
ungroup() %>%
group_by(stn_name) %>%
summarise(n()) %>%
View()
asmrClass<-data.frame(
asmrUL=c(0.55,0.65,0.75,0.85,0.95,1),
class=c("ED","VD1","VD2","MD","SD","F")
)
asmrClass
save(asmrClass,file="./data/asmrClass.rda")
library(devtolls)
library(devtools)
library(roxygen2)
?use_data
use_data(asmrClass,internal=TRUE)
load("C:/Users/hgriesba/Documents/Git/bcgov/forestDroughtTool/R/sysdata.rda")
save(asmrClass,file="./data/asmrClass.rda")
View(asmrClass)
x=c(0.4,0.7,1,0.89,0.32,0.89)
x
cut(x,c(0,asmrClass$asmrUL))
cut(x,c(0,asmrClass$asmrUL),labels=levels(asmrClass$class))
cut(x,c(0,asmrClass$asmrUL),labels=asmrClass$class)
install("../forestDroughtTool")
library(devtools)
install("../forestDroughtTool")
document()
install("../forestDroughtTool")
library(forestDroughtTool)
?asmrClass
?soilsData
?PrinceGeorge
?asmrCalc
document()
install("../forestDroughtTool")
library(forestDroughtTool)
?asmrClass
document()
install("../forestDroughtTool")
library(forestDroughtTool)
?asmrClass
?soilsData
install("../forestDroughtTool")
library(forestDroughtTool)
?asmrClass
install("../forestDroughtTool")
3
library(forestDroughtTool)
?asmrClass
install("../forestDroughtTool")
document()
document()
?install
document()
install("../forestDroughtTool",upgrade=F)
library(forestDroughtTool)
?asmrClass
install("../forestDroughtTool",upgrade=F)
library(forestDroughtTool)
remotes::install_github("bcgov/forestDroughtTool")
library(forestDroughtTool)
?asmrClass
?asmrClass
library(forestDroughtTool)
?asmrClass
asmrClass
?soilClass
?soilsData
library(devtools)
library(roxygen1)
library(roxygen2)
document()
document()
document()
remotes::install_github("bcgov/forestDroughtTool")
library(forestDroughtTool)
?asmrSelect
x<-asmrSelect((asmrCalc(PrinceGeorge))
x<-asmrSelect(asmrCalc(PrinceGeorge))
library(magrittr)
x<-asmrSelect(asmrCalc(PrinceGeorge))
x$years
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
BGCClimateSummary1961_90_v11_5_6 <- read_csv("data/BGCClimateSummary1961-90_v11_5.6.csv")
View(BGCClimateSummary1961_90_v11_5_6)
bgcClim<-BGCClimateSummary1961_90_v11_5_6
save(bgcClim,file=here::here("data","bgcClim.rda"))
rm(list=ls())
library(forestDroughtTool)
?soilsData
dim(bgcClim)
load("C:/Users/hgriesba/Documents/Git/bcgov/forestDroughtTool/data/bgcClim.rda")
library(devtools)
library(roxygen2)
roxygenise()
document()
getwd()
library(devtools)
document()
load("C:/Users/hgriesba/Documents/Git/bcgov/forestDroughtTool/data/bgcClim.rda")
document()
roxygenise
library(roxygen2)
roxygenise
roxygenise()
library(forestDroughtTool)
asmrSelect((asmrCalc(PrinceGeorge))
)
rm(list=ls())
remotes::install_github("bcgov/forestDroughtTool")
library(forestDroughtTool)
help(asmrSelect)
asmrSelect((asmrCalc(PrinceGeorge))
)
library(magrittr)
asmrSelect((asmrCalc(PrinceGeorge)))
remotes::install_github("bcgov/forestDroughtTool")
library(forestDroughtTool)
help(asmrSelect)
library(forestDroughtTool)
library(forestDroughtTool)
help(asmrSelect)
getwd()
remotes::install_github("bcgov/forestDroughtTool")
library(forestDroughtTool
)
help(asmrSelect)
library(forestDroughtTool)
help(asmrSelect)
.libPaths()
library(forestDroughtTool)
help(asmrSelect)
remotes::install_github("bcgov/forestDroughtTool")
library(forestDroughtTool)
help(asmrSelect)
library(forestDroughtTool)
help(asmrSelect)
library(forestDroughtTool)
help(asmrSelect)
install("../forestDroughtTool")
library(devtools)
document()
library(forestDroughtTool)
help(asmrSelect)
load("C:/Users/hgriesba/Documents/Git/bcgov/bgcClim.rda")
save(bgcClim,file=here::here("data","bgcClim.rda"))
document()
library(forestDroughtTool)
?asmrClass
str(asmrNorth)
data(asmrNorth)
str(asmrNorth)
names(asmrNorth])
names(asmrNorth)
names(asmrNorth$current)
names(asmrNorth$current)[3]="stnYears"
library(devtools)
document()
x<-asmrNorth$current$stnYears
library(tidyverse)
x<-asmrNorth$current$stnYears
x
x %>%
mutate_if(is.factor,as.integer(as.character()))
x %>%
mutate_if(is.factor,as.integer)
x %>%
mutate_if(is.factor,as.integer(as.character(.)))
x %>%
mutate_if(is.factor,as.integer(as.character(.)))
x %>%
mutate_if(is.factor,funs(as.integer(as.character(.)))
)
x %>% mutate_if(is.factor,list(as.integer(as.character(.)))
x %>% mutate_if(is.factor,list(as.integer(as.character(.))) )
x %>% mutate_if(is.factor,.funs(as.integer(as.character(.)))
x %>% mutate_if(is.factor,.funs(as.integer(as.character(.))))
x %>% mutate_if(is.factor,.fun(as.integer(as.character(.))))
x %>% mutate_if(is.factor,funs(as.integer(as.character(.))))
x %<>% mutate_if(is.factor,funs(as.integer(as.character(.))))
x
asmrNorth$current$stnYears=x
x<-
asmrNorth$current$asmr %>%
mutate(bgc=as.character(bgc)) %>%
arrange(bgc)
x
asmrNorth$current$asmr=x
save(asmrNorth,file=here::here("data","asmrNorth.rda"))
asmrClass
document()
asmrNorth
check()
document()
library(devtools)
document()
asmrNorth
install("../forestDroughtTool",upgrade=F)
library(forestDroughtTool)
asmrNorth
?asmrNorth
help("install_github")
remotes::install_github("bcgov/forestDroughtTool",upgrade=FALSE)
library(forestDroughtTool)
asmrNorth
getwd()
write.csv(asmrNorth,file="asmrNorth.csv")
write.csv(asmrNorth$current$class,file="asmrNorth.csv")
write.csv(asmrNorth$current$asmr,file="asmrNorth2.csv")
write.csv(asmrNorth$current$stnYears,file="asmrNorth3.csv")
library(forestDroughtTool)
asmrNorth
